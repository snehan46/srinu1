{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DashboardComponent = class DashboardComponent {\n  constructor(auth, http) {\n    this.auth = auth;\n    this.http = http;\n    this.showProfile = false;\n    this.user = {\n      localId: \"someid\",\n      displayName: \"somename\",\n      email: \"somemail\"\n    };\n  }\n  ngOnInit() {\n    this.auth.canAccess();\n    if (this.auth.isAuthenticated()) {\n      this.auth.detail().subscribe({\n        next: data => {\n          this.user.localId = data.users[0].localId;\n          this.user.displayName = data.users[0].displayName;\n          this.user.email = data.users[0].email;\n        }\n      });\n    }\n  }\n  onFileSelected(event) {\n    this.csvFile = event.target.files[0];\n  }\n  onSubmit() {\n    if (!this.csvFile || !this.periodicity || !this.timePeriod) {\n      alert('Please fill all the fields.');\n      return;\n    }\n    alert('Form submitted!');\n    const formData = new FormData();\n    formData.append('csvFile', this.csvFile);\n    formData.append('periodicity', this.periodicity);\n    formData.append('timePeriod', this.timePeriod);\n    this.http.post('http://localhost:5000/forecast', formData).subscribe(response => {\n      console.log(response);\n      this.mae = response.mae;\n      this.rmse = response.rmse;\n    }, error => console.log(error));\n  }\n  showProfilePopup() {\n    this.showProfile = true;\n  }\n  hideProfilePopup() {\n    this.showProfile = false;\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAS7BC,YAAoBC,IAAgB,EAAUC,IAAgB;IAA1C,SAAI,GAAJD,IAAI;IAAsB,SAAI,GAAJC,IAAI;IAH3C,gBAAW,GAAG,KAAK;IAI1B,SAAI,GAAG;MAACC,OAAO,EAAC,QAAQ;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAC;IAAU,CAAC;EADC;EAElEC,QAAQ;IACN,IAAI,CAACL,IAAI,CAACM,SAAS,EAAE;IACrB,IAAI,IAAI,CAACN,IAAI,CAACO,eAAe,EAAE,EAAE;MAG7B,IAAI,CAACP,IAAI,CAACQ,MAAM,EAAE,CAACC,SAAS,CAAC;QAC3BC,IAAI,EAACC,IAAI,IAAE;UACP,IAAI,CAACC,IAAI,CAACV,OAAO,GAAGS,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACX,OAAO;UACzC,IAAI,CAACU,IAAI,CAACT,WAAW,GAAGQ,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACV,WAAW;UACjD,IAAI,CAACS,IAAI,CAACR,KAAK,GAACO,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACT,KAAK;QACvC;OACD,CAAC;;EAER;EAEAU,cAAc,CAACC,KAAU;IACvB,IAAI,CAACC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACtC;EAEAC,QAAQ;IACN,IAAI,CAAC,IAAI,CAACH,OAAO,IAAI,CAAC,IAAI,CAACI,WAAW,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;MAC1DC,KAAK,CAAC,6BAA6B,CAAC;MACpC;;IAEFA,KAAK,CAAC,iBAAiB,CAAC;IAExB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAACT,OAAO,CAAC;IACxCO,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAACL,WAAW,CAAC;IAChDG,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,IAAI,CAACJ,UAAU,CAAC;IAC9C,IAAI,CAACpB,IAAI,CAACyB,IAAI,CAAC,gCAAgC,EAAEH,QAAQ,CAAC,CAACd,SAAS,CACjEkB,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACG,GAAG,GAAGH,QAAQ,CAACG,GAAG;MACvB,IAAI,CAACC,IAAI,GAAGJ,QAAQ,CAACI,IAAI;IAC3B,CAAC,EACAC,KAAK,IAAKJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC,CAC9B;EACH;EAEAC,gBAAgB;IACd,IAAI,CAACC,WAAW,GAAG,IAAI;EACzB;EAEAC,gBAAgB;IACd,IAAI,CAACD,WAAW,GAAG,KAAK;EAC1B;CACD;AA1DYpC,kBAAkB,eAL9BD,SAAS,CAAC;EACTuC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWxC,kBAAkB,CA0D9B;SA1DYA,kBAAkB","names":["Component","DashboardComponent","constructor","auth","http","localId","displayName","email","ngOnInit","canAccess","isAuthenticated","detail","subscribe","next","data","user","users","onFileSelected","event","csvFile","target","files","onSubmit","periodicity","timePeriod","alert","formData","FormData","append","post","response","console","log","mae","rmse","error","showProfilePopup","showProfile","hideProfilePopup","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\sriva\\Desktop\\Sales-Forecasting-AngularTs-main\\Sales-Forecasting-AngularTs-main\\sales\\src\\app\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  public periodicity!: string;\n  public timePeriod!: string;\n  public csvFile!: File;\n  public mae!: number;\n  public rmse!: number;\n  public showProfile = false;\n\n  \n  constructor(private auth:AuthService ,private http: HttpClient) { }\n  user = {localId:\"someid\",displayName:\"somename\",email:\"somemail\"};\n  ngOnInit(): void {\n    this.auth.canAccess();\n    if (this.auth.isAuthenticated()) {\n       \n      \n        this.auth.detail().subscribe({\n          next:data=>{\n              this.user.localId = data.users[0].localId;\n              this.user.displayName = data.users[0].displayName;\n              this.user.email=data.users[0].email;\n          }\n        })\n    }\n  }\n\n  onFileSelected(event: any) {\n    this.csvFile = event.target.files[0];\n  }\n\n  onSubmit() {\n    if (!this.csvFile || !this.periodicity || !this.timePeriod) {\n      alert('Please fill all the fields.');\n      return;\n    }\n    alert('Form submitted!');\n\n    const formData = new FormData();\n    formData.append('csvFile', this.csvFile);\n    formData.append('periodicity', this.periodicity);\n    formData.append('timePeriod', this.timePeriod);\n    this.http.post('http://localhost:5000/forecast', formData).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.mae = response.mae;\n        this.rmse = response.rmse;\n      },\n      (error) => console.log(error)\n    );\n  }\n  \n  showProfilePopup() {\n    this.showProfile = true;\n  }\n\n  hideProfilePopup() {\n    this.showProfile = false;\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}