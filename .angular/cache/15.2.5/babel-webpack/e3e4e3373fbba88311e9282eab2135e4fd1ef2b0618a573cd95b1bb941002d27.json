{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../navbar/navbar.component\";\nexport class DashboardComponent {\n  constructor(auth, http) {\n    this.auth = auth;\n    this.http = http;\n    this.showProfile = false;\n    this.user = {\n      localId: \"someid\",\n      displayName: \"somename\",\n      email: \"somemail\"\n    };\n  }\n  ngOnInit() {\n    this.auth.canAccess();\n    if (this.auth.isAuthenticated()) {\n      //call user details service\n      this.auth.detail().subscribe({\n        next: data => {\n          this.user.localId = data.users[0].localId;\n          this.user.displayName = data.users[0].displayName;\n          this.user.email = data.users[0].email;\n        }\n      });\n    }\n  }\n  onFileSelected(event) {\n    this.csvFile = event.target.files[0];\n  }\n  onSubmit() {\n    if (!this.csvFile || !this.periodicity || !this.timePeriod) {\n      alert('Please fill all the fields.');\n      return;\n    }\n    alert('Form submitted!');\n    const formData = new FormData();\n    formData.append('csvFile', this.csvFile);\n    formData.append('periodicity', this.periodicity);\n    formData.append('timePeriod', this.timePeriod);\n    this.http.post('http://localhost:5000/forecast', formData).subscribe(response => {\n      console.log(response);\n      this.mae = response.mae;\n      this.rmse = response.rmse;\n    }, error => console.log(error));\n  }\n  showProfilePopup() {\n    this.showProfile = true;\n  }\n  hideProfilePopup() {\n    this.showProfile = false;\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 62,\n  vars: 7,\n  consts: [[\"id\", \"profileModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"profileModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"profileModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"dashboard-block\"], [\"type\", \"button\", \"data-toggle\", \"modal\", \"data-target\", \"#profileModal\", 1, \"btn\", \"btn-primary\"], [1, \"container\"], [1, \"row\"], [1, \"col\", \"dashboard-sec\"], [1, \"text-center\", 2, \"color\", \"#ffffff\"], [1, \"dashboard-form\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"csvFile\"], [\"type\", \"file\", \"id\", \"csvFile\", \"name\", \"csvFile\", 3, \"change\"], [\"for\", \"periodicity\", 1, \"text-center\"], [\"id\", \"periodicity\", \"name\", \"periodicity\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"daily\"], [\"value\", \"weekly\"], [\"value\", \"monthly\"], [\"value\", \"yearly\"], [\"for\", \"timePeriod\"], [\"type\", \"text\", \"id\", \"timePeriod\", \"name\", \"timePeriod\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"onclick\", \"window.location.href = 'https://app.powerbi.com/groups/me/reports/56500613-202f-476e-9ac9-3f58cd0ba96d/ReportSection';\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-navbar\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"h5\", 4);\n      i0.ɵɵtext(6, \"Profile\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 5)(8, \"span\", 6);\n      i0.ɵɵtext(9, \"\\u00D7\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 7)(11, \"p\")(12, \"b\");\n      i0.ɵɵtext(13, \"User ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\")(16, \"b\");\n      i0.ɵɵtext(17, \"User Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"p\")(20, \"b\");\n      i0.ɵɵtext(21, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(22);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(23, \"section\", 8)(24, \"button\", 9);\n      i0.ɵɵtext(25, \" Profile \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 10)(27, \"div\", 11)(28, \"div\", 12)(29, \"h2\", 13);\n      i0.ɵɵtext(30, \"UPLOAD FILE\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"form\", 14);\n      i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_31_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(32, \"div\", 15)(33, \"label\", 16);\n      i0.ɵɵtext(34, \"Upload CSV file:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"input\", 17);\n      i0.ɵɵlistener(\"change\", function DashboardComponent_Template_input_change_35_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 15)(37, \"label\", 18);\n      i0.ɵɵtext(38, \"Periodicity:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"select\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_select_ngModelChange_39_listener($event) {\n        return ctx.periodicity = $event;\n      });\n      i0.ɵɵelementStart(40, \"option\", 20);\n      i0.ɵɵtext(41, \"Daily\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"option\", 21);\n      i0.ɵɵtext(43, \"Weekly\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(44, \"option\", 22);\n      i0.ɵɵtext(45, \"Monthly\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"option\", 23);\n      i0.ɵɵtext(47, \"Yearly\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(48, \"div\", 15)(49, \"label\", 24);\n      i0.ɵɵtext(50, \"Period:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"input\", 25);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_51_listener($event) {\n        return ctx.timePeriod = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(52, \"button\", 26);\n      i0.ɵɵtext(53, \"powerbi\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(54, \"br\");\n      i0.ɵɵelementStart(55, \"p\")(56, \"u\");\n      i0.ɵɵtext(57, \"ACCURACY METRICS\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(58, \"h6\");\n      i0.ɵɵtext(59);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(60, \"h6\");\n      i0.ɵɵtext(61);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵtextInterpolate1(\" \", ctx.user.localId, \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", ctx.user.displayName, \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", ctx.user.email, \"\");\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngModel\", ctx.periodicity);\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngModel\", ctx.timePeriod);\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate1(\"MAE: \", ctx.mae, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"RMSE: \", ctx.rmse, \"\");\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.NavbarComponent],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 943:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(6:26) C:\\\\\\\\Users\\\\\\\\sriva\\\\\\\\Desktop\\\\\\\\Sales-Forecasting-AngularTs-main\\\\\\\\Sales-Forecasting-AngularTs-main\\\\\\\\sales\\\\\\\\src\\\\\\\\app\\\\\\\\dashboard\\\\\\\\dashboard.component.css Unclosed bracket\\\\n\\\\n \\\\u001b[90m 4 | \\\\u001b[39m    height\\\\u001b[33m:\\\\u001b[39m 100%\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 5 | \\\\u001b[39m    margin\\\\u001b[33m:\\\\u001b[39m 0\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 6 | \\\\u001b[39m    background-image\\\\u001b[33m:\\\\u001b[39m \\\\u001b[36murl\\\\u001b[39m\\\\u001b[36m(\\\\u001b[39m\\\\n \\\\u001b[90m   | \\\\u001b[39m                         \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 7 | \\\\u001b[39m    background-position\\\\u001b[33m:\\\\u001b[39m center\\\\u001b[33m;\\\\u001b[39m \\\\n \\\\u001b[90m 8 | \\\\u001b[39m    background-repeat\\\\u001b[33m:\\\\u001b[39m no-repeat\\\\u001b[33m;\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[943]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=dashboard.component.css.map*/\"]\n});","map":{"version":3,"mappings":"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","names":["DashboardComponent","constructor","auth","http","localId","displayName","email","ngOnInit","canAccess","isAuthenticated","detail","subscribe","next","data","user","users","onFileSelected","event","csvFile","target","files","onSubmit","periodicity","timePeriod","alert","formData","FormData","append","post","response","console","log","mae","rmse","error","showProfilePopup","showProfile","hideProfilePopup","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\sriva\\Desktop\\Sales-Forecasting-AngularTs-main\\Sales-Forecasting-AngularTs-main\\sales\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\sriva\\Desktop\\Sales-Forecasting-AngularTs-main\\Sales-Forecasting-AngularTs-main\\sales\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  public periodicity!: string;\n  public timePeriod!: string;\n  public csvFile!: File;\n  public mae!: number;\n  public rmse!: number;\n  public showProfile = false;\n\n  \n  constructor(private auth:AuthService ,private http: HttpClient) { }\n  user = {localId:\"someid\",displayName:\"somename\",email:\"somemail\"};\n  ngOnInit(): void {\n    this.auth.canAccess();\n    if (this.auth.isAuthenticated()) {\n        //call user details service\n        this.auth.detail().subscribe({\n          next:data=>{\n              this.user.localId = data.users[0].localId;\n              this.user.displayName = data.users[0].displayName;\n              this.user.email=data.users[0].email;\n          }\n        })\n    }\n  }\n\n  onFileSelected(event: any) {\n    this.csvFile = event.target.files[0];\n  }\n\n  onSubmit() {\n    if (!this.csvFile || !this.periodicity || !this.timePeriod) {\n      alert('Please fill all the fields.');\n      return;\n    }\n    alert('Form submitted!');\n\n    const formData = new FormData();\n    formData.append('csvFile', this.csvFile);\n    formData.append('periodicity', this.periodicity);\n    formData.append('timePeriod', this.timePeriod);\n    this.http.post('http://localhost:5000/forecast', formData).subscribe(\n      (response: any) => {\n        console.log(response);\n        this.mae = response.mae;\n        this.rmse = response.rmse;\n      },\n      (error) => console.log(error)\n    );\n  }\n  \n  showProfilePopup() {\n    this.showProfile = true;\n  }\n\n  hideProfilePopup() {\n    this.showProfile = false;\n  }\n}\n\n","<app-navbar></app-navbar>\n\n\n<!-- The Modal -->\n<div class=\"modal fade\" id=\"profileModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"profileModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"profileModalLabel\">Profile</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p><b>User ID:</b> {{user.localId}}</p>\n        <p><b>User Name:</b> {{user.displayName}}</p>\n        <p><b>Email:</b> {{user.email}}</p>\n\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- This is the Upload page -->\n<section class=\"dashboard-block\"  >\n  <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#profileModal\">\n    Profile\n  </button>\n  <div class=\"container\">\n      <div class=\"row \">\n          <div class=\"col dashboard-sec\">\n            <h2 class=\"text-center\" style=\"color: #ffffff;\">UPLOAD FILE</h2>\n\n              <form class=\"dashboard-form\" (ngSubmit)=\"onSubmit()\">\n              <div class=\"form-group\">\n                <label for=\"csvFile\">Upload CSV file:</label>\n                <input type=\"file\" id=\"csvFile\" name=\"csvFile\" (change)=\"onFileSelected($event)\">\n              </div>\n              <div class=\"form-group\">\n                <label for=\"periodicity\" class=\"text-center\">Periodicity:</label>\n                <select id=\"periodicity\" name=\"periodicity\" [(ngModel)]=\"periodicity\">\n                  <option value=\"daily\">Daily</option>\n                  <option value=\"weekly\">Weekly</option>\n                  <option value=\"monthly\">Monthly</option>\n                  <option value=\"yearly\">Yearly</option>\n                </select>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"timePeriod\">Period:</label>\n                <input type=\"text\" id=\"timePeriod\" name=\"timePeriod\" [(ngModel)]=\"timePeriod\" >\n              </div>\n              <!--<button type=\"submit\" [disabled]=\"!csvFile\">Submit</button>-->\n              <button type=\"submit\" onclick=\"window.location.href = 'https://app.powerbi.com/groups/me/reports/56500613-202f-476e-9ac9-3f58cd0ba96d/ReportSection';\">powerbi</button>\n            </form>\n              <br>\n             <p><u>ACCURACY METRICS</u></p>\n              <h6>MAE: {{mae}}</h6> \n              <h6>RMSE: {{rmse}}</h6>\n          </div>\n          \n      </div>\n  </div>\n</section>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}